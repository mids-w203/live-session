getwd()
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
1. What is Feynman's view of science? What does he think makes something *scientific*?
2. What are ways that individuals fool themselves when they are working as scientists? What are ways that individuals fool themselves when they are working as data scientists?
3. How can we as (data) scientists, train ourselves not to be fooled?
bookdown::pdf_book('./index.Rmd')
bookdown::pdf_book()
bookdown::pdf_book()
bookdown::render_book("./index.Rmd", output_format = "bookdown::pdf_book")
bookdown::render_book("./index.Rmd", output_format = "bookdown::gitbook")
bookdown::render_book("./index.Rmd", output_format = "bookdown::gitbook")
bookdown::render_book("./index.Rmd", output_format = "bookdown::gitbook")
bookdown::render_book("./index.Rmd", output_format = "bookdown::gitbook")
bookdown::render_book("./index.Rmd", output_format = "bookdown::gitbook")
bookdown::render_book("./index.Rmd", output_format = "bookdown::gitbook")
bookdown::render_book("./index.Rmd", output_format = "bookdown::gitbook")
- If you drink a cup of coffee before you start class, will it make you more alert in class? Don't worry about conducting the experiment, or any measurement concerns at this point.
- Does coffee cause everyone to become more alert? Does it have to, in order for you to believe that it causes increased alertness? Does it have to affect everyone equally?
- When you think about *{this}* causing *{that}*, do you think about it at a population level, a smaller group level, or at the individual level?
- Do environmental pollutants, a major concern in the San Francisco Bay Area, cause health problems?
population_function <- function(sample_size) {
runif(n=sample_size, min=0, max=10)
}
theta_4 <- function(data) {
mean(data)
}
theta_4(population_function(100))
bookdown::render_book(input = './index.Rmd', output_format = bookdown::pdf_book)
bookdown::render_book(input = './index.Rmd', output_format = bookdown::pdf_book())
bookdown::render_book(input = './index.Rmd')
library(ggplot2)
ggplot() +
aes(x = 1:10, y = 1:10) +
geom_blank()
bookdown::render_book(input = './index.Rmd')
?bookdown::render_book
bookdown::render_book(input = './index.Rmd', output_format = "bookdown::pdf_book")
bookdown::render_book(input = './index.Rmd', output_format = "bookdown::pdf_book")
bookdown::render_book(input = './index.Rmd', output_format = "bookdown::gitbook")
bookdown::render_book(input = './index.Rmd', output_format = "bookdown::gitbook")
bookdown::render_book(input = './index.Rmd', output_format = "bookdown::gitbook")
bookdown::render_book(input = './index.Rmd', output_format = "bookdown::gitbook")
bookdown::render_book(input = './index.Rmd', output_format = "bookdown::gitbook")
d <- data.table(
id = 1:100,
D  = rep(0:1, each = 50),
Y  = c(rnorm(n=50, mean=0, sd=1), rnorm(n=50, mean=1, sd=1))
)
library(data.table)
d <- data.table(
id = 1:100,
D  = rep(0:1, each = 50),
Y  = c(rnorm(n=50, mean=0, sd=1), rnorm(n=50, mean=1, sd=1))
)
d[ , t.test(Y ~ D)]
d <- data.table(
id = 1:100,
D  = rep(0:1, each = 50),
Y  = c(rnorm(n=50, mean=0, sd=2), rnorm(n=50, mean=1, sd=2))
)
d[ , t.test(Y ~ D)]
d <- data.table(
id = 1:100,
D  = rep(0:1, each = 50),
Y  = c(rnorm(n=50, mean=0, sd=3), rnorm(n=50, mean=1, sd=3))
)
d[ , t.test(Y ~ D)]
d <- data.table(
id = 1:100,
D  = rep(0:1, each = 50),
Y  = c(rnorm(n=50, mean=0, sd=2), rnorm(n=50, mean=1, sd=2))
)
d[ , t.test(Y ~ D)]
set.seed(1)
d <- data.table(
id = 1:100,
D  = rep(0:1, each = 50),
Y  = c(rnorm(n=50, mean=0, sd=2), rnorm(n=50, mean=1, sd=2))
)
d[ , t.test(Y ~ D)]
set.seed(1)
d <- data.table(
id = 1:100,
D  = rep(0:1, each = 50),
Y  = c(rnorm(n=50, mean=0, sd=2.5), rnorm(n=50, mean=1, sd=2.5))
)
d[ , t.test(Y ~ D)]
library(ggplot2)
d[ , ggplot()] +
aes(x=Y, color=D) +
geom_density()
ggplot(d) +
aes(x=Y, color=D) +
geom_density()
ggplot(d) +
aes(x=Y, color=as.factor(D)) +
geom_density()
ggplot(d) +
aes(x=Y, fill=as.factor(D)) +
geom_density()
ggplot(d) +
aes(x=Y, fill=as.factor(D)) +
geom_density(alpha=0.5)
bookdown::render_book('index.Rmd', 'bookdown::github_book')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
d[ , .(group_mean = mean(Y)), keyby = .(D)]
d[ , .(group_mean = mean(Y)), keyby = .(D)][ , group_mean[D==1] - group_mean[D==0]]
true_ate <- d[ , .(group_mean = mean(Y)), keyby = .(D)][ , group_mean[D==1] - group_mean[D==0]]
ri_distribution <- replicate(
n=1000,
expr = d[ , .(group_mean = mean(Y)), keyby = .(sampleD)][ ,
group_mean[D==1] - group_mean[D==0]]
)
## 3 & 4 Permute the treatment assignment labels and repeatedly compute the statistic of interest
ri_distribution <- replicate(
n=1000,
expr = d[ , .(group_mean = mean(Y)), keyby = .(sample(D))][ ,
group_mean[D==1] - group_mean[D==0]]
)
d[ , .(group_mean = mean(Y)), keyby = .(sample(D))][ ,
group_mean[D==1] - group_mean[D==0]]
d
d[ , .(group_mean = mean(Y)), keyby = .(sample(D))]
## 3 & 4 Permute the treatment assignment labels and repeatedly compute the statistic of interest
ri_distribution <- replicate(
n=1000,
expr = d[ , .(group_mean = mean(Y)), keyby = .(ri_treatment = sample(D))][ ,
group_mean[ri_treatment==1] - group_mean[ri_treatment==0]]
)
ggplot() +
geom_density(aes(x=ri_distribution))
ggplot() +
geom_density(aes(x=ri_distribution), fill = '#003262', alpha = 0.5)
ggplot() +
geom_density(aes(x=ri_distribution), fill = '#003262', alpha = 0.5) +
geom_vline(x = true_ate, color = '#FDB515')
ggplot() +
geom_density(aes(x=ri_distribution), fill = '#003262', alpha = 0.5) +
geom_vline(xintercept = true_ate, color = '#FDB515')
## 1. The sharp null is that tau = 0
## 2. Compute the statistic of interest
true_ate <- d[ , .(group_mean = mean(Y)), keyby = .(D)][ , group_mean[D==1] - group_mean[D==0]]
## 3 & 4 Permute the treatment assignment labels and repeatedly compute the statistic of interest
ri_distribution <- replicate(
n=1000,
expr = d[ , .(group_mean = mean(Y)), keyby = .(ri_treatment = sample(D))][ ,
group_mean[ri_treatment==1] - group_mean[ri_treatment==0]]
)
ggplot() +
geom_density(aes(x=ri_distribution), fill = '#003262', alpha = 0.5) +
geom_vline(xintercept = true_ate, color = '#FDB515') +
labs(
x     = 'Randomization Inference Distribution and Estimated ATE',
title = 'Randomization Inference'
)
ggplot() +
geom_density(aes(x=ri_distribution), fill = '#003262', alpha = 0.5) +
geom_vline(xintercept = true_ate, color = '#FDB515') +
labs(
x     = 'Randomization Inference Distribution and Estimated ATE',
y     = NULL,
title = 'Randomization Inference'
)
ggplot(d) +
aes(x=Y, fill=as.factor(D)) +
geom_density(alpha=0.5) +
labs(
x        = 'Distribution of Outcomes',
y        = 'Density',
title    = 'Distribution of Outcomes',
subtitle = 'By Treatment',
fill    = 'Treatment Assignment') +
scale_fill_manual(
values = c('#003262', '#FDB515')
)
ggplot(d) +
aes(x=Y, fill=as.factor(D)) +
geom_density(alpha=0.5) +
labs(
x        = 'Distribution of Outcomes',
y        = 'Density',
title    = 'Distribution of Outcomes, by treatment',
fill    = 'Treatment Assignment') +
scale_fill_manual(
values = c('#003262', '#FDB515')
)
ggplot(d) +
aes(x=Y, fill=as.factor(D)) +
geom_density(alpha=0.5) +
labs(
x        = 'Distribution of outcomes',
y        = NULL,
title    = 'Distribution of outcomes, by treatment',
fill    = 'Treatment Assignment') +
scale_fill_manual(
values = c('#003262', '#FDB515')
)
ggplot(d) +
aes(x=Y, fill=as.factor(D)) +
geom_density(alpha=0.5) +
labs(
x        = 'Distribution of outcomes',
y        = NULL,
title    = 'Distribution of outcomes, by treatment',
fill    = 'Treatment\nAssignment') +
scale_fill_manual(
values = c('#003262', '#FDB515')
)
mean(abs(ri_distribution) > abs(true_ate))
ri_p_value <- mean(abs(ri_distribution) > abs(true_ate))
ri_p_value <- mean(abs(ri_distribution) > abs(true_ate))
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd')
bookdown::render_book('index.Rmd', output_format = 'bookdown::pdf_book')
bookdown::render_book('index.Rmd', output_format = 'bookdown::gitbook')
bookdown::render_book('index.Rmd', output_format = 'bookdown::gitbook')
bookdown::render_book('index.Rmd', output_format = 'bookdown::gitbook')
bookdown::render_book('index.Rmd', output_format = 'bookdown::gitbook')
bookdown::render_book('index.Rmd', output_format = 'bookdown::gitbook')
bookdown::render_book('index.Rmd', output_format = 'bookdown::gitbook')
bookdown::render_book('index.Rmd', output_format = 'bookdown::gitbook')
bookdown::render_book('index.Rmd', output_format = 'bookdown::gitbook')
?bookdown::render_book
bookdown::render_book(input = '.', output_format = 'bookdown::gitbook')
bookdown::render_book(input = '.', output_format = 'bookdown::gitbook')
getwd()
setwd('~/MIDS/w203/live-session')
bookdown::render_book(input = '.', output_format = 'bookdown::gitbook')
bookdown::render_book(input = '.', output_format = 'bookdown::gitbook')
bookdown::render_book(input = '.', output_format = 'bookdown::gitbook', new_session = TRUE)
bookdown::render_book(input = '.', output_format = 'bookdown::gitbook', new_session = TRUE)
bookdown::render_book(input = '.', output_format = 'bookdown::pdf_book', new_session = TRUE)
bookdown::render_book(input = '.', output_format = 'bookdown::pdf_book', new_session = TRUE)
bookdown::render_book(input = '.', output_format = 'bookdown::pdf_book', new_session = TRUE)
bookdown::render_book(input = '.', output_format = 'bookdown::pdf_book', new_session = TRUE)
bookdown::render_book(input = '.', output_format = 'bookdown::pdf_book', new_session = TRUE)
bookdown::render_book(input = '.', output_format = 'bookdown::pdf_book', new_session = TRUE)
bookdown::render_book(input = '.', new_session = TRUE)
bookdown::render_book(input = '.', new_session = TRUE)
getwd(0)
getwd()
list.files()
library(bookdown)
bookdown::render_book(input = '.', output_format = 'bookdown::gitbook', new_session = TRUE)
install.packages('bookdown')
bookdown::render_book(input = '.', output_format = 'bookdown::gitbook', new_session = TRUE)
install.packages('wooldridge')
bookdown::render_book(input = '.', output_format = 'bookdown::gitbook', new_session = TRUE)
bookdown::render_book(input = '.', output_format = 'bookdown::gitbook', new_session = TRUE)
bookdown::render_book(input = '.', output_format = 'bookdown::pdf_book', new_session = TRUE)
bookdown::render_book(input = '.', new_session = TRUE)
bookdown::render_book(input = '.', output_format = 'bookdown::pdf_book', new_session = TRUE)
bookdown::render_book(input = '.', new_session = TRUE)
bookdown::render_book(input = '.', new_session = TRUE)
bookdown::render_book(input = '.', new_session = TRUE)
bookdown::render_book(input = '.', new_session = TRUE)
bookdown::render_book(input = '.', output_format = "bookdown::gitbook", new_session = TRUE)
bookdown::render_book(input = '.', output_format = "bookdown::gitbook", new_session = TRUE)
bookdown::render_book(input = '.', output_format = "bookdown::gitbook", new_session = TRUE, output_dir = 'docs')
